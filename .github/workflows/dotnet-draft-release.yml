name: .NET-Draft-Release

on: 
  workflow_dispatch:
    inputs:
      name:
        description: 'Version number'
        required: true
      prerelease:
        description: 'Prerelease'
        required: true
        type: boolean
        default: false

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: windows-latest
            rid: win-x64
            buildName: Windows
          - os: macos-latest
            rid: osx-x64
            buildName: Mac-OS
          - os: ubuntu-latest
            rid: linux-x64
            buildName: Linux

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish src -c Release -o publish -r ${{ matrix.rid }} --no-self-contained --verbosity normal
    - name: Prepare Publish Directory
      run: |
        cp LICENSE publish
        cp README.md publish
    - name: Archive Release
      uses: thedoctor0/zip-release@main
      with:
        filename: ${{ github.event.repository.name }}-${{ matrix.buildName }}.zip
        directory: publish
        exclusions: '*.pdb'
    - name: Upload Artifact
      uses: actions/upload-artifact@v3.1.0  
      with:
        name: ${{ github.event.repository.name }}-${{ matrix.buildName }}
        path: publish/${{ github.event.repository.name }}-${{ matrix.buildName }}.zip
        if-no-files-found: error
  
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    - name: Draft Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ inputs.name }}
        name: Version ${{ inputs.name }}
        files: artifacts/**/*.zip
        prerelease: ${{ inputs.prerelease }}
        draft: true
        fail_on_unmatched_files: true
